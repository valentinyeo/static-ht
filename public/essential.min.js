// Essential performance monitoring - non-blocking
(function() {
  'use strict';
  
  // Only run if not already loaded
  if (window.essentialLoaded) return;
  window.essentialLoaded = true;
  
  // Defer execution to avoid blocking
  setTimeout(function() {
    // Core Web Vitals monitoring
    function measureWebVitals() {
      // LCP - Largest Contentful Paint
      if ('PerformanceObserver' in window) {
        try {
          const lcpObserver = new PerformanceObserver(function(list) {
            const entries = list.getEntries();
            const lastEntry = entries[entries.length - 1];
            if (lastEntry) {
              console.log('LCP:', lastEntry.startTime);
            }
          });
          lcpObserver.observe({entryTypes: ['largest-contentful-paint']});
        } catch (e) {
          // Silently fail if not supported
        }
      }
      
      // FID - First Input Delay
      if ('PerformanceObserver' in window) {
        try {
          const fidObserver = new PerformanceObserver(function(list) {
            const entries = list.getEntries();
            entries.forEach(function(entry) {
              console.log('FID:', entry.processingStart - entry.startTime);
            });
          });
          fidObserver.observe({entryTypes: ['first-input']});
        } catch (e) {
          // Silently fail if not supported
        }
      }
    }
    
    // CLS - Cumulative Layout Shift
    function measureCLS() {
      if ('PerformanceObserver' in window) {
        try {
          let clsValue = 0;
          const clsObserver = new PerformanceObserver(function(list) {
            const entries = list.getEntries();
            entries.forEach(function(entry) {
              if (!entry.hadRecentInput) {
                clsValue += entry.value;
              }
            });
            console.log('CLS:', clsValue);
          });
          clsObserver.observe({entryTypes: ['layout-shift']});
        } catch (e) {
          // Silently fail if not supported
        }
      }
    }
    
    // Initialize measurements
    measureWebVitals();
    measureCLS();
    
    // Page load performance
    window.addEventListener('load', function() {
      setTimeout(function() {
        if ('performance' in window) {
          const perfData = performance.getEntriesByType('navigation')[0];
          if (perfData) {
            console.log('Page Load Time:', perfData.loadEventEnd - perfData.loadEventStart);
            console.log('DOM Content Loaded:', perfData.domContentLoadedEventEnd - perfData.domContentLoadedEventStart);
          }
        }
      }, 0);
    });
    
  }, 100); // Defer by 100ms
  
})();